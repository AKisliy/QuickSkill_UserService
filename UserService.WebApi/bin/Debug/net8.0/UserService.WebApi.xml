<?xml version="1.0"?>
<doc>
    <assembly>
        <name>UserService.WebApi</name>
    </assembly>
    <members>
        <member name="M:UserService.WebApi.Controllers.AuthController.Register(UserService.WebApi.Dtos.UserRegisterRequest)">
            <summary>
            Register new user
            </summary>
            <param name="user">Request body</param>
            <response code="200">Successfully registered</response>
            <response code="400">Bad request body</response>
            <response code="409">Conflict while creating</response>
        </member>
        <member name="M:UserService.WebApi.Controllers.AuthController.Login(UserService.WebApi.Dtos.UserLoginRequest)">
            <summary>
            Login user
            </summary>
            <param name="user">Request body</param>
            <response code="200">Successfully login</response>
            <response code="404">User not found/invalid credentials</response>
        </member>
        <member name="M:UserService.WebApi.Controllers.AuthController.Verify(System.String)">
            <summary>
            Verify user(called automatically)
            </summary>
            <param name="token">Verification token</param>
            <response code="200">Successfully verified</response>
            <response code="400">Can't verify</response>
        </member>
        <member name="M:UserService.WebApi.Controllers.AuthController.ForgotPassword(System.String)">
            <summary>
            Forgot password
            </summary>
            <param name="email">Email of user</param>
            <response code="400">Empty of incorrect email</response>
            <response code="202">Email sent to mailbox</response>
            <response code="404">No user with this email</response>
        </member>
        <member name="M:UserService.WebApi.Controllers.AuthController.ResetPassword(System.String,System.String)">
            <summary>
            Reset password
            </summary>
            <param name="token">Reset token(get it from URL body)</param>
            <param name="password">New password</param>
            <response code="403">Empty of incorrect token</response>
            <response code="200">Success</response>
            <response code="404">No user found with this token</response>
        </member>
        <member name="M:UserService.WebApi.Controllers.AuthController.Refresh(UserService.WebApi.Dtos.RefreshRequest)">
            <summary>
            Refresh JWT token
            </summary>
            <param name="request">Body has two fields: accessToken - expired JWT token, refreshToken - refresh token</param>
            <response code="401">Something went wrong while validating JWT or refresh token</response>
            <response code="200">Success</response>
            <response code="500">Server problems :(</response>
        </member>
        <member name="M:UserService.WebApi.Controllers.AuthController.Revoke">
            <summary>
            Revoke refresh token(by JWT). Use it when you need to delete refresh token from DB.
            </summary>
            <response code="200">Success</response>
            <response code="400">Bad JWT</response>
            <response code="500">Server problems :(</response>
        </member>
        <member name="M:UserService.WebApi.Controllers.BadgeController.GetAllBadgesForUser">
            <summary>
            Get all badges for current user(by token)
            </summary>
            <returns>List of UserBadgeResponse</returns>
            <response code="200">Success</response>
            <response code="404">User with this id wasn't found</response>
        </member>
        <member name="M:UserService.WebApi.Controllers.BadgeController.GetAllBadgesForUserById(System.Int32)">
            <summary>
            Get all badges for user(by id)
            </summary>
            <returns>List of UserBadgeResponse</returns>
            <response code="200">Success</response>
            <response code="404">User with this id wasn't found</response>
        </member>
        <member name="M:UserService.WebApi.Controllers.BadgeController.GetBadgeById(System.Int32)">
            <summary>
            Get badge by its id
            </summary>
            <param name="id">Badge ID</param>
            <returns>BadgeResponse</returns>
            <response code="200">Success</response>
            <response code="404">Badge with this id wasn't found</response>
        </member>
        <member name="M:UserService.WebApi.Controllers.BadgeController.CreateNewBadge(UserService.WebApi.Dtos.BadgeRequest)">
            <summary>
            Create new badge
            </summary>
            <param name="badge">New badge body</param>
            <returns>ID of badge + uri</returns>
            <response code="201">Successfully created</response>
            <response code="409">Can't create this badge</response>
        </member>
        <member name="M:UserService.WebApi.Controllers.BadgeController.UpdateBadgeForUser(UserService.WebApi.Dtos.UserBadgeRequest)">
            <summary>
            Update user's badges progress
            </summary>
            <param name="request">User badge body</param>
            <response code="200">Success</response>
            <response code="400">Can't update</response>
        </member>
        <member name="M:UserService.WebApi.Controllers.BadgeController.UpdateBadge(System.Int32,UserService.WebApi.Dtos.BadgeRequest)">
            <summary>
            Update badge information
            </summary>
            <param name="id">ID of badge to update</param>
            <param name="request">Badge body</param>
            <response code="200">Success</response>
            <response code="404">No badge with this id</response>
        </member>
        <member name="M:UserService.WebApi.Controllers.BadgeController.DeleteBadge(System.Int32)">
            <summary>
            Delete badge
            </summary>
            <param name="id">ID of badge to delete</param>
            <response code="200">Success</response>
            <response code="404">No badge with this id</response>
        </member>
        <member name="M:UserService.WebApi.Controllers.UserController.GetUsers">
            <summary>
            Get all users
            </summary>
            <returns>List of UserResponse</returns>
            <response code="200">Success</response>
            <response code="400">Bad request</response>
        </member>
        <member name="M:UserService.WebApi.Controllers.UserController.GetUser">
            <summary>
            Get current user(by token)
            </summary>
            <returns>UserResponse</returns>
            <response code="200">Success</response>
            <response code="404">User with this id wasn't found</response>
        </member>
        <member name="M:UserService.WebApi.Controllers.UserController.GetUserById(System.Int32)">
            <summary>
            Get user by Id
            </summary>
            <returns>UserResponse</returns>
            <response code="200">Success</response>
            <response code="404">User with this id wasn't found</response>
        </member>
        <member name="M:UserService.WebApi.Controllers.UserController.UpdateUserXp(System.Int32)">
            <summary>
            Add XP to user with ID
            </summary>
            <param name="xpCnt">Count of XP to add</param>
            <returns>bool</returns>
            <response code="200">Success</response>
            <response code="404">User with this id wasn't found</response>
        </member>
        <member name="M:UserService.WebApi.Controllers.UserController.DeleteUser">
            <summary>
            Delete user with id
            </summary>
            <response code="200">Success</response>
            <response code="404">User with this id wasn't found</response>
        </member>
        <member name="M:UserService.WebApi.Controllers.UserController.SetUserActivity">
            <summary>
            Set user today's activity to "Active"
            </summary>
            <response code="200">Success</response>
            <response code="404">User with this id wasn't found</response>
        </member>
        <member name="M:UserService.WebApi.Controllers.UserController.GetUserWeekActivity">
            <summary>
            Get user activity for current week
            </summary>
            <response code="200">Success</response>
            <response code="404">User with this id wasn't found</response>
        </member>
        <member name="M:UserService.WebApi.Controllers.UserController.GetUserMonthActivity(System.Int32,System.Int32)">
            <summary>
            Get user activity for month in year
            </summary>
            <param name="month">Number of month</param>
            <param name="year">Number of year</param>
            <response code="200">Success</response>
            <response code="404">User with this id wasn't found</response>
        </member>
        <member name="M:UserService.WebApi.Controllers.UserController.SetUserFirstName(System.String)">
            <summary>
            Set new Firstname to the user
            </summary>
            <param name="newName">New firstname</param>
            <response code="200">Success</response>
            <response code="404">User with this id wasn't found</response>
            <response code="500">Something bad happened</response>
        </member>
        <member name="M:UserService.WebApi.Controllers.UserController.SetUserLastName(System.String)">
            <summary>
            Set new lastname to the user
            </summary>
            <param name="newLastName">New lastname</param>
            <response code="200">Success</response>
            <response code="404">User with this id wasn't found</response>
            <response code="500">Something bad happened :(</response>
        </member>
        <member name="M:UserService.WebApi.Controllers.UserController.SetUserUsername(System.String)">
            <summary>
            Set new username to the user
            </summary>
            <param name="newUsername">New username</param>
            <response code="200">Success</response>
            <response code="404">User with this id wasn't found</response>
            <response code="500">Something bad happened :(</response>
        </member>
        <member name="M:UserService.WebApi.Controllers.UserController.SetUserDescription(System.String)">
            <summary>
            Set new description to the user
            </summary>
            <param name="newDescription">New description</param>
            <response code="200">Success</response>
            <response code="404">User with this id wasn't found</response>
            <response code="500">Something bad happened :(</response>
        </member>
        <member name="M:UserService.WebApi.Controllers.UserController.SetUserPhoto(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Set new photo to the user
            </summary>
            <param name="file">New photo</param>
            <response code="200">Success</response>
            <response code="404">User with this id wasn't found</response>
            <response code="500">Something bad happened :(</response>
        </member>
        <member name="M:UserService.WebApi.Controllers.UserController.CheckUserPassword(System.String)">
            <summary>
            Check user's password
            </summary>
            <param name="password">Password to check</param>
            <response code="200">Success</response>
            <response code="404">User with this id wasn't found</response>
            <response code="403">Incorrect password</response>
            <response code="500">Something bad happened :(</response>
        </member>
        <member name="M:UserService.WebApi.Controllers.UserController.ChangeUserPassword(UserService.WebApi.Dtos.ChangePasswordRequest)">
            <summary>
            Change user's password
            </summary>
            <param name="request">Contains old and new password</param>
            <response code="200">Success</response>
            <response code="400">BadRequest. Check your request body</response>
            <response code="404">User with this id wasn't found</response>
            <response code="403">Incorrect password</response>
            <response code="500">Something bad happened :(</response>
        </member>
    </members>
</doc>
